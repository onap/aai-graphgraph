<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.onap.aai.graphgraph</groupId>
  <artifactId>graphgraph</artifactId>
  <version>1.0</version>

  <properties>
    <nexusproxy>https://nexus.onap.org</nexusproxy>
    <site.path>/content/sites/site/org/onap/aai/graphgraph/${project.artifactId}/${project.version}</site.path>
    <release.path>/content/repositories/releases/</release.path>
    <snapshot.path>/content/repositories/snapshots/</snapshot.path>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <java.version>1.8</java.version>
    <spring.boot.version>1.5.19.RELEASE</spring.boot.version>

    <docker.fabric.version>0.23.0</docker.fabric.version>
    <docker.registry>docker.io</docker.registry>
    <docker.push.registry>localhost:5000</docker.push.registry>
    <aai.docker.namespace>onap</aai.docker.namespace>
    <aai.build.directory>${project.build.directory}/${project.artifactId}-${project.version}-build/</aai.build.directory>
    <graphgraph.startpath>src/main/resources/</graphgraph.startpath>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
  <groupId>ch.qos.logback</groupId>
  <artifactId>logback-classic</artifactId>
</dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jetty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.onap.aai.aai-common</groupId>
      <artifactId>aai-schema-ingest</artifactId>
      <version>1.4.3</version>
    </dependency>
    <dependency>
      <groupId>org.onap.aai.aai-common</groupId>
      <artifactId>aai-core</artifactId>
      <version>1.4.3</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jgrapht</groupId>
      <artifactId>jgrapht-core</artifactId>
      <version>1.3.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.2</version>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>docker</id>
      <properties>
        <graphgraph.startpath>/graphgraph/</graphgraph.startpath>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-maven-plugin</artifactId>
            <version>4.1.0</version>
            <configuration>
              <verbose>true</verbose>
              <images>
                <image>
                  <name>graphgraph:${project.version}</name>
                  <build>
                    <from>aaionap/aai-common:1.3.0</from>
                    <entryPoint>
                      <exec>
                        <arg>java</arg>
                        <arg>-jar</arg>
                        <arg>/graphgraph/${project.artifactId}-${project.version}.${project.packaging}</arg>
                      </exec>
                    </entryPoint>
                    <assembly>
                      <targetDir>/graphgraph</targetDir>
                      <descriptor>${project.basedir}/src/main/resources/docker-assembly.xml</descriptor>
                    </assembly>
                  </build>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>generate-images</id>
                <phase>install</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
              <execution>
                <id>push-images</id>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
      <plugins>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>1.7.6</version>
          <executions>
            <execution>
              <id>install node</id>
              <goals>
                <goal>install-node-and-npm</goal>
              </goals>
              <phase>generate-resources</phase>
              <configuration>
                <workingDirectory>${project.basedir}/graphgraph-fe</workingDirectory>
                <nodeVersion>v10.10.0</nodeVersion>
              </configuration>
            </execution>
            <execution>
              <id>npm install</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <phase>generate-resources</phase>
              <configuration>
                <workingDirectory>${project.basedir}/graphgraph-fe</workingDirectory>
                <arguments>install</arguments>
              </configuration>
            </execution>
            <execution>
              <id>npm build</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <phase>generate-resources</phase>
              <configuration>
                <workingDirectory>${project.basedir}/graphgraph-fe</workingDirectory>
                <arguments>run build</arguments>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
              <artifactId>maven-resources-plugin</artifactId>
              <version>3.1.0</version>
              <executions>
                  <execution>
                      <id>copy-resources-ui</id>
                      <phase>validate</phase>
                      <goals>
                          <goal>copy-resources</goal>
                      </goals>
                      <configuration>
                          <outputDirectory>${project.build.directory}/classes/public</outputDirectory>
                          <resources>
                              <resource>
                                  <directory>${project.basedir}/graphgraph-fe/build</directory>
                                  <filtering>false</filtering>
                              </resource>
                          </resources>
                      </configuration>
                  </execution>
              </executions>
          </plugin>
          <plugin>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-maven-plugin</artifactId>
              <version>2.1.2.RELEASE</version>
              <executions>
                  <execution>
                      <goals>
                          <goal>repackage</goal>
                      </goals>
                  </execution>
              </executions>
          </plugin>
      </plugins>
  </build>
   <distributionManagement>
        <repository>
            <id>ecomp-releases</id>
            <name>ECOMP Release Repository</name>
            <url>${nexusproxy}${release.path}</url>
        </repository>
        <snapshotRepository>
            <id>ecomp-snapshots</id>
            <name>ECOMP Snapshot Repository</name>
            <url>${nexusproxy}${snapshot.path}</url>
        </snapshotRepository>
        <site>
            <id>ecomp-site</id>
            <url>dav:${nexusproxy}${site.path}</url>
        </site>
    </distributionManagement>
</project>
